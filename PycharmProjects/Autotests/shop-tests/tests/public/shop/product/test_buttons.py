import allureimport timeimport pytestfrom allure_commons.types import Severityfrom befree.api_model.catalog.db_queries.queries import QueriesCatalogclass TestButtons(QueriesCatalog):    @allure.title("Кнопка 'Выберите размер' на странице товара")    @allure.description(        """Кнопка 'Выберите размер' выводится в следующих случаях:        * у товара один рост или он отсутствует и при переходе на страницу товара не выбран размер        * у товара несколько ростов и при переходе на страницу товара рост выбран"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_button_select_size(self, shop):        with allure.step("Размер и рост не выбраны"):            with allure.step("Находим артикул товара в наличии и с 2 и более размерами"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Проверить, что на странице товара выводится кнопка 'Выберите размер'"):                shop.product_page.check_state_buttons(state='disabled', block='product', name = 'select_size')        with allure.step("Выбран рост, размер не выбран"):            with allure.step("Находим артикул товара в наличии с 2 и более размерами и с 2 и более ростами"):                conditions = [                    """and v.fulfilment_qty >5 and v.height_id is not null and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 2                            )                            and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) > 2                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара с выбранным ростом, но без размера"):                slug = f"{product['article']}/{product['color_code_id']}?height={product['height_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Выберите размер'"):                shop.product_page.check_state_buttons(state='disabled', block='product', name = 'select_size')    @allure.title("Кнопка 'Выберите рост' на странице товара")    @allure.description("""Кнопка 'Выберите рост' выводится, если у товара несколько ростов и предвыбран размер""")    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_button_select_height(self, shop):        with allure.step("Товар с одним ростом"):            with allure.step("Находим артикул товара в наличии и с одним ростом"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) = 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара с выбранным размером"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Проверить, что на странице товара НЕ выводится кнопка 'Выберите рост'"):                shop.product_page.check_state_buttons(state='disabled', block='size_table', name='select_height',visibility="not_visible")        with allure.step("Товар с несколькими ростами"):            with allure.step("Находим артикул товара в наличии и с 2 и более ростами"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара с выбранным размером, но без роста"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Проверить, что на странице товара выводится кнопка 'Выберите рост'"):                shop.product_page.check_state_buttons(state='disabled', block='size_table', name='select_height')    @allure.title("Кнопка 'Сообщить о поступлении' на странице товара")    @allure.description(        """Кнопка 'Сообщить о поступлении' выводится, если нет товара на остатках:        * для определенного размера товара, если он предвыбран        * если размер не предвыбран и по всему товару нет размеров"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_button_out_of_stock(self, shop):        with allure.step("Находим товар не в наличии"):            variation = self.find_variation_by_availability_condition(qty_sfs=None, qty_ff=None, qty_omni=None)            conditions = [f"and v.id = {variation[0]['variation_id']}"]            product = self.get_data_for_product_card(conditions=conditions)        with allure.step("Перейти на страницу товара не в наличии"):            slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            shop.product_page.navigate(slug=slug)        with allure.step("Проверить, что на странице товара выводится кнопка 'Сообщить о поступлении'"):            shop.product_page.check_state_buttons(state='white_default', block='product',                                                  name='out_of_stock')        with allure.step("Кликнуть на кнопку 'Сообщить о поступлении'"):            shop.product_page.click_button_product_out_of_stock()        # доделать        with allure.step("Проверяем, что открылась штора 'Сообщить о поступлении'"):            ...    @allure.title("Одна кнопка 'Оформить доставку' на странице товара")    @allure.description(        """Одна кнопка 'Оформить доставку' выводится, если предвыбран размер/рост и данный вариант есть в наличии         только в сфс"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_one_button_to_delivery(self, shop):        with allure.step("Находим товар, который есть в наличии только в сфс"):            conditions = [                """and  v.product_id IN (                                            SELECT v2.product_id                                            FROM variations v2                                             GROUP BY v2.product_id                                            HAVING COUNT(DISTINCT v2.size_id) > 2                                        )"""            ]            variation = self.find_variation_by_availability_condition(                qty_sfs="> 3", qty_ff=None, qty_omni=None, city_id_in=6, conditions=conditions            )            conditions1 = [f"and v.id = {variation[0]['variation_id']}"]            product = self.get_data_for_product_card(conditions=conditions1)        with allure.step("Перейти на страницу товара"):            slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            shop.product_page.navigate(slug=slug)        with allure.step("Проверить, что на странице товара выводится только кнопка 'Оформить доставку'"):            shop.product_page.check_state_buttons(state='black_default', block='product', name='to_delivery')            shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart',                                                  visibility="not_visible")            shop.product_page.check_state_buttons(state='black_default', block='product', name='available_stores',                                                  visibility="not_visible")        with allure.step("Кликнуть на кнопку 'Оформить доставку'"):            shop.product_page.click_button_product_to_delivery()        with allure.step("Проверяем, что произошел переход на чекаут"):            shop.product_page.check_navigate_checkout()    @allure.title("Одна кнопка 'Добавить в корзину' на странице товара")    @allure.description(        """Одна кнопка 'Добавить в корзину' выводится в следующих случаях:        * если предвыбран размер/рост и данный вариант есть в наличии только в фф        * если предвыбран размер/рост и данный вариант есть в наличии одновременно в фф и сфс                При клике на эту кнопку она меняется на 'Перейти в корзину' и остается такой 4 секунды.         Спустя 4 секунды кнопка снова меняется на 'Добавить в корзину'. Также проверяется, что кнопка 'Перейти в корзину'         в на странице товара ведет в корзину"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_one_button_add_cart(self, shop):        with allure.step("Товар в наличии только в фф"):            with allure.step("Находим товар, который есть в наличии только в фф"):                conditions = [                    """and  v.product_id IN (                                                SELECT v2.product_id                                                FROM variations v2                                                 GROUP BY v2.product_id                                                HAVING COUNT(DISTINCT v2.size_id) > 2                                            )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs=None, qty_ff="> 3", qty_omni=None, city_id_in=6, conditions=conditions                )                conditions1 = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions1)            with allure.step("Перейти на страницу товара"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Проверить, что на странице товара выводится только кнопка 'Добавить в корзину'"):                shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')                shop.product_page.check_state_buttons(state='black_default', block='product', name='to_delivery',                                                      visibility="not_visible")                shop.product_page.check_state_buttons(state='black_default', block='product', name='available_stores',                                                      visibility="not_visible")                with allure.step("Кликнуть на кнопку 'Добавить в корзину'"):                    shop.product_page.click_button_product_add_cart()                with allure.step("Проверяем, что изменилась кнопка на 'Перейти в корзину'"):                    shop.product_page.check_state_buttons(state='black_default', block='product', name='go_cart')                with allure.step("Ждем 4 секунды и проверяем, что кнопка изменилась кнопка на 'Добавить в корзину'"):                    time.sleep(4)                    shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')                with allure.step("Кликнуть на кнопку 'Добавить в корзину'"):                    shop.product_page.click_button_product_add_cart()                with allure.step("Кликнуть на кнопку 'Перейти в корзину'"):                    shop.product_page.click_button_product_go_cart()                with allure.step("Проверяем, что произошел переход на страницу корзины"):                    shop.product_page.check_navigate_cart()        with allure.step("Товар в наличии только в фф и сфс"):            with allure.step("Находим товар, который есть в наличии только в фф и сфс"):...            # сделать через моки            with allure.step("Перейти на страницу товара"):...            #     slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            #     shop.product_page.navigate(slug=slug)            #            with allure.step("Проверить, что на странице товара выводится только кнопка 'Добавить в корзину'"):...            #     shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')            #     shop.product_page.check_state_buttons(state='black_default', block='product', name='to_delivery',            #                                           visibility="not_visible")            #     shop.product_page.check_state_buttons(state='black_default', block='product', name='available_stores',            #                                           visibility="not_visible")            #    @allure.title("Две кнопки 'Добавить в корзину' и 'В наличии в N магазинах' на странице товара")    @allure.description(        """Две кнопки 'Добавить в корзину' и 'В наличии в N магазинах' выводятся в следующих случаях:        * если предвыбран размер/рост и данный вариант есть в наличии только в омни        * если предвыбран размер/рост и данный вариант есть в наличии одновременно в фф и омни"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_two_buttons_add_cart_and_available_stores(self, shop):        with allure.step("Товар доступен только в омни"):            with allure.step("Находим товар, который есть в наличии только в омни"):                conditions = [                    """and  v.product_id IN (                                                SELECT v2.product_id                                                FROM variations v2                                                 GROUP BY v2.product_id                                                HAVING COUNT(DISTINCT v2.size_id) > 2                                            )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs=None, qty_ff=None, qty_omni="> 3", city_id_in=6, conditions=conditions                )                conditions1 = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions1)            with allure.step("Перейти на страницу товара"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Проверить, что на странице товара выводятся только кнопки 'Добавить в корзину' и 'В "                             "наличии в N магазинах'"):                shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')                shop.product_page.check_state_buttons(state='white_default', block='product', name='available_stores')                shop.product_page.check_state_buttons(state='black_default', block='product', name='to_delivery',                                                      visibility="not_visible")            # доделать            with allure.step("Нажимаем на кнопку 'В наличии в N магазинах'"):...            with allure.step("Проверяем, что открылась штора 'Наличие в магазинах'"): ...        with allure.step("Товар доступен в фф и  омни"):            with allure.step("Находим товар, который есть в наличии в фф и омни"):                conditions = [                    """and  v.product_id IN (                                                SELECT v2.product_id                                                FROM variations v2                                                 GROUP BY v2.product_id                                                HAVING COUNT(DISTINCT v2.size_id) > 2                                            )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs=None, qty_ff="> 3", qty_omni=">3", city_id_in=6, conditions=conditions                )                conditions1 = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions1)            with allure.step("Перейти на страницу товара"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step(                    "Проверить, что на странице товара выводятся только кнопки 'Добавить в корзину' и 'В наличии в N "                    "магазинах'"):                shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')                # shop.product_page.check_state_buttons(state='white_default', block='product', name='available_stores')                shop.product_page.check_state_buttons(state='black_default', block='product', name='to_delivery',                                                      visibility="not_visible")                # доделать                with allure.step("Нажимаем на кнопку 'В наличии в N магазинах'"): ...                with allure.step("Проверяем, что открылась штора 'Наличие в магазинах'"): ...    @allure.title("Три кнопки 'Добавить в корзину', 'Оформить доставку' и 'В наличии в N магазинах' на странице товара")    @allure.description(        """Три кнопки 'Добавить в корзину', 'Оформить доставку' и 'В наличии в N магазинах' выводятся в случае,         если предвыбран размер/рост и данный вариант есть в наличии одновременно в омни и сфс"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Кнопки")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_three_buttons(self, shop):        with allure.step("Находим товар, который есть в наличии только в омни и сфс"):            conditions = [                """and  v.product_id IN (                                            SELECT v2.product_id                                            FROM variations v2                                             GROUP BY v2.product_id                                            HAVING COUNT(DISTINCT v2.size_id) > 2                                        )"""            ]            variation = self.find_variation_by_availability_condition(                qty_sfs="> 3", qty_ff=None, qty_omni="> 3", city_id_in=6, conditions=conditions            )            conditions1 = [f"and v.id = {variation[0]['variation_id']}"]            product = self.get_data_for_product_card(conditions=conditions1)        with allure.step("Перейти на страницу товара"):            slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            shop.product_page.navigate(slug=slug)        with allure.step("Проверить, что на странице товара выводятся три кнопки 'Добавить в корзину', "                         "'Оформить доставку' и линк 'В наличии в N магазинах'"):            shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')            shop.product_page.check_state_buttons(state='white_default', block='product', name='to_delivery')            shop.product_page.check_state_buttons(state='link', block='product', name='available_stores')    # @pytest.mark.parametrize("shop_page", [True], indirect=True)    # def test_mobile_shop(self, shop):    #     # тест с мобильной версией    #     shop.product_page.navigate(slug="2426036049")    #     # time.sleep(5)    #     # shop.product_page.check_state_buttons(state='black_default', block='product', name='add_cart')    #