import timeimport allurefrom allure_commons.types import Severityfrom befree.api_model.catalog.db_queries.queries import QueriesCatalogclass TestGeneral(QueriesCatalog):    @allure.title("Таблица размеров не выводится для товара без обмеров")    @allure.description(        """Проверяем, что товара, для которого не заданы обмеры (sizeComparison, productDimensions, bodyDimensions)         не выводится линк на Таблицу размеров"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_without_size_table(self, shop):        with allure.step("Перейти на страницу товара без обмеров для таблицы размеров"):            shop.product_page.navigate(slug="2426036049")        with allure.step("Проверить, что на странице не выводится ссылка на таблицу размеров"):            shop.product_page.check_size_table_not_exist()    @allure.title("Вывод информации о росте в Таблице размеров")    @allure.description(        """Проверяем, что для товаров, у которых нет роста или 1 рост, в таблице размеров не выводится информация о         росте,         а для товаров с 2 и более ростами выводится строка 'разница в длине между ростами — 5 сантиметров по внутреннему шву' """    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_height_info(self, shop):        with allure.step("Товар без роста"):            with allure.step("Перейти на страницу товара без роста (height_id = null)"):                shop.product_page.navigate(slug="BF2526682008/50?size=20")            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров НЕ выводится строка 'разница в длине между ростами — 5 "                "сантиметров по внутреннему шву'"            ):                shop.product_page.height_info_not_exist()        with allure.step("Товар с одним ростом"):            with allure.step("Находим артикул товара с одним ростом"):                conditions = [                    """and v.product_id IN (                                SELECT var.product_id                                FROM variations var                                GROUP BY var.product_id                                HAVING COUNT(DISTINCT var.height_id) = 1                                )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара с одним ростом"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров НЕ выводится строка 'разница в длине между ростами — 5 "                "сантиметров по внутреннему шву'"            ):                shop.product_page.height_info_not_exist()        with allure.step("Товар с 2 и более ростами"):            with allure.step("Находим артикул товара с 2 и более ростами"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) > 2                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара 2 и более ростами"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}&height={product['height_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров выводится строка 'разница в длине между ростами — 5 "                "сантиметров по внутреннему шву'"            ):                shop.product_page.height_info_exist()    @allure.title("Кнопка 'Сообщить о поступлении' в шторе Таблица размеров")    @allure.description(        """Проверяем, что для товара не в наличии в шторе Таблица размеров выводится кнопка 'Сообщить о поступлении'"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_button_out_of_stock(self, shop):        with allure.step("Находим товар не в наличии"):            variation = self.find_variation_by_availability_condition(qty_sfs=None, qty_ff=None, qty_omni=None)            conditions = [f"and v.id = {variation[0]['variation_id']}"]            product = self.get_data_for_product_card(conditions=conditions)        with allure.step("Перейти на страницу товара не в наличии"):            slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            shop.product_page.navigate(slug=slug)        with allure.step("Открыть штору Таблица размеров"):            shop.product_page.open_size_table()        with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Сообщить о поступлении'"):            shop.product_page.button_size_table_out_of_stock_exist()        with allure.step("Кликнуть на кнопку 'Сообщить о поступлении'"):            shop.product_page.click_button_size_table_out_of_stock()        # доделать        with allure.step("Проверяем, что открылась штора 'Сообщить о поступлении'"):            ...    @allure.title("Кнопка 'Оформить доставку' в шторе Таблица размеров")    @allure.description(        """Проверяем, что для товара в наличии только в сфс в шторе Таблица размеров выводится кнопка 'Оформить         доставку' и при клике на нее открывается чекаут"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_button_to_delivery(self, shop):        with allure.step("Находим товар, который есть в наличии только в сфс"):            conditions = [                """and  v.product_id IN (                                            SELECT v2.product_id                                            FROM variations v2                                             GROUP BY v2.product_id                                            HAVING COUNT(DISTINCT v2.size_id) > 2                                        )"""            ]            variation = self.find_variation_by_availability_condition(                qty_sfs="> 3", qty_ff=None, qty_omni=None, city_id_in=6, conditions=conditions            )            conditions1 = [f"and v.id = {variation[0]['variation_id']}"]            product = self.get_data_for_product_card(conditions=conditions1)        with allure.step("Перейти на страницу товара"):            slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            shop.product_page.navigate(slug=slug)        with allure.step("Открыть штору Таблица размеров"):            shop.product_page.open_size_table()        with allure.step("Проверить, что Таблица размеров не пустая и в ней выводятся атрибуты"):            shop.product_page.check_size_table_not_empty()        with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Оформить доставку'"):            shop.product_page.button_size_table_to_delivery_exist()        with allure.step("Кликнуть на кнопку 'Оформить доставку'"):            shop.product_page.click_button_size_table_to_delivery()        with allure.step("Проверяем, что произошел переход на чекаут"):            shop.product_page.check_navigate_checkout()    @allure.title("Кнопка 'Добавить в корзину' в шторе Таблица размеров")    @allure.description(        """Проверяем, что для товара в наличии омни1/фф ИЛИ омни1/фф и сфс в шторе Таблица размеров выводится кнопка         'Добавить в корзину'. При клике на эту кнопку она меняется на 'Перейти в корзину' и остается такой 4 секунды.         Спустя 4 секунды кнопка снова меняется на 'Добавить в корзину'. Также проверяется, что кнопка 'Перейти в корзину'         в шторе Таблица размеров ведет в корзину """    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_button_add_cart(self, shop):        with allure.step("Товар в наличии только в омни"):            with allure.step("Находим товар, который есть в наличии только в омни"):                conditions = [                    """and  v.product_id IN (                                                SELECT v2.product_id                                                FROM variations v2                                                 GROUP BY v2.product_id                                                HAVING COUNT(DISTINCT v2.size_id) > 2                                            )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs=None, qty_ff=None, qty_omni="> 3", city_id_in=6, conditions=conditions                )                conditions1 = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions1)            with allure.step("Перейти на страницу товара"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что Таблица размеров не пустая и в ней выводятся атрибуты"):                shop.product_page.check_size_table_not_empty()            with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Добавить в корзину'"):                shop.product_page.button_size_table_add_cart_exist()        with allure.step("Товар в наличии только в фф"):            with allure.step("Находим товар, который есть в наличии только в фф"):                conditions = [                    """and  v.product_id IN (                                                SELECT v2.product_id                                                FROM variations v2                                                 GROUP BY v2.product_id                                                HAVING COUNT(DISTINCT v2.size_id) > 2                                            )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs=None, qty_ff="> 3", qty_omni=None, city_id_in=6, conditions=conditions                )                conditions1 = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions1)            with allure.step("Перейти на страницу товара"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что Таблица размеров не пустая и в ней выводятся атрибуты"):                shop.product_page.check_size_table_not_empty()            with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Добавить в корзину'"):                shop.product_page.button_size_table_add_cart_exist()        with allure.step("Товар в наличии только в омни и сфс"):            with allure.step("Находим товар, который есть в наличии только в омни и сфс"):                conditions = [                    """and  v.product_id IN (                                                SELECT v2.product_id                                                FROM variations v2                                                 GROUP BY v2.product_id                                                HAVING COUNT(DISTINCT v2.size_id) > 2                                            )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs="> 3", qty_ff=None, qty_omni="> 3", city_id_in=6, conditions=conditions                )                conditions1 = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions1)            with allure.step("Перейти на страницу товара"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что Таблица размеров не пустая и в ней выводятся атрибуты"):                shop.product_page.check_size_table_not_empty()            with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Добавить в корзину'"):                shop.product_page.button_size_table_add_cart_exist()            with allure.step("Кликнуть на кнопку 'Добавить в корзину'"):                shop.product_page.click_button_size_table_add_cart()            with allure.step("Проверяем, что изменилась кнопка на 'Перейти в корзину'"):                shop.product_page.button_size_table_go_cart_exist()            with allure.step("Ждем 4 секунды и проверяем, что кнопка изменилась кнопка на 'Добавить в корзину'"):                time.sleep(4)                shop.product_page.button_size_table_add_cart_exist()            with allure.step("Кликнуть на кнопку 'Добавить в корзину'"):                shop.product_page.click_button_size_table_add_cart()            with allure.step("Кликнуть на кнопку 'Перейти в корзину'"):                shop.product_page.click_button_size_table_go_cart()            with allure.step("Проверяем, что произошел переход на страницу корзины"):                shop.product_page.check_navigate_cart()    @allure.title("Кнопка 'Выберите размер' в шторе Таблица размеров")    @allure.description("""Проверяем вывод кнопки 'Выберите размер' в шторе Таблица размеров""")    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_button_select_size(self, shop):        with allure.step("Размер и рост не выбран"):            with allure.step("Находим артикул товара в наличии и с 2 и более размерами"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что Таблица размеров пустая и в ней не выводятся никакие атрибуты"):                shop.product_page.check_size_table_empty()            with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Выберите размер'"):                shop.product_page.button_size_table_select_size_exist()        with allure.step("Выбран рост, размер не выбран"):            with allure.step("Находим артикул товара в наличии с 2 и более размерами"):                conditions = [                    """and v.fulfilment_qty >5 and v.height_id is not null and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}?height={product['height_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что Таблица размеров пустая и в ней не выводятся никакие атрибуты"):                shop.product_page.check_size_table_empty()            with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Выберите размер'"):                shop.product_page.button_size_table_select_size_exist()    @allure.title("Кнопка 'Выберите рост' в шторе Таблица размеров")    @allure.description("""Проверяем вывод кнопки 'Выберите рост' в шторе Таблица размеров""")    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_button_select_height(self, shop):        with allure.step("Находим артикул товара в наличии и с 2 и более ростами"):            conditions = [                """and v.fulfilment_qty >5 and v.product_id IN (                            SELECT v2.product_id                            FROM variations v2                             GROUP BY v2.product_id                            HAVING COUNT(DISTINCT v2.height_id) > 1                        )"""            ]            product = self.get_data_for_product_card(conditions=conditions)        with allure.step("Перейти на страницу товара с выбранным размером, но без роста"):            slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"            shop.product_page.navigate(slug=slug)        with allure.step("Открыть штору Таблица размеров"):            shop.product_page.open_size_table()        with allure.step("Проверить, что Таблица размеров пустая и в ней не выводятся никакие атрибуты"):            shop.product_page.check_size_table_empty()        with allure.step("Проверить, что в Таблице размеров выводится кнопка 'Выберите рост'"):            shop.product_page.button_size_table_select_height_exist()    @allure.title("В шторе Таблица размеров не предвыбирается размер и рост, если он не предвыбран на странице товара")    @allure.description("""""")    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_size_and_height_not_selected(self, shop):        with allure.step("Товар с одним ростом"):            with allure.step("Находим артикул товара в наличии с 2 и более размерами"):                conditions = [                    """and v.fulfilment_qty >5 and v.height_id is not null and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров не выбраны размеры"):                shop.product_page.check_all_params_not_selected(param="size", block="size_table")        with allure.step("Товар с несколькими ростами"):            with allure.step("Находим артикул товара в наличии с 2 и более ростами"):                conditions = [                    """and v.fulfilment_qty >5 and v.height_id is not null and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) > 2                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров не выбраны размеры"):                shop.product_page.check_all_params_not_selected(param="size", block="size_table")            with allure.step("Проверить, что в Таблице размеров не выбраны росты"):                shop.product_page.check_all_params_not_selected(param="height", block="size_table")    @allure.title("В шторе Таблица размеров предвыбирается размер и рост, указанный на странице товара")    @allure.description("""""")    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_size_and_height_selected(self, shop):        with allure.step("Товар с одним ростом, размер выбран"):            with allure.step("Находим артикул товара в наличии с 2 и более размерами"):                conditions = [                    """and v.fulfilment_qty >5 and v.height_id is not null and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара c выбранным размером"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров выбран соответствующий размер"):                shop.product_page.check_state_element(                    param="size", state="in_stock_and_selected", block="size_table", id=product["size_id"]                )        with allure.step("Товар с несколькими ростами, размер выбран, рост не выбран"):            with allure.step("Находим артикул товара в наличии с 2 и более ростами"):                conditions = [                    """and v.fulfilment_qty >5 and v.height_id is not null and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                 GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) > 2                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара c выбранным размером, рост не выбран"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров не выбран рост"):                shop.product_page.check_all_params_not_selected(param="height", block="size_table")            with allure.step("Проверить, что в Таблице размеров выбран соответствующий размер"):                shop.product_page.check_state_element(                    param="size", state="in_stock_and_selected", block="size_table", id=product["size_id"]                )        with allure.step("Товар с несколькими ростами, размер не выбран, рост выбран"):            with allure.step("Перейти на страницу товара c выбранным ростом, размер не выбран"):                slug = f"{product['article']}/{product['color_code_id']}?height={product['height_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров выбран соответствующий рост"):                shop.product_page.check_state_element(                    param="height", state="in_stock_and_selected", block="size_table", id=product["height_id"]                )            with allure.step("Проверить, что в Таблице размеров не выбран размер"):                shop.product_page.check_all_params_not_selected(param="size", block="size_table")        with allure.step("Товар с несколькими ростами, рост и размер выбраны"):            with allure.step("Перейти на страницу товара c выбранным размером и ростом"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}&height={product['height_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров выбран соответствующий рост"):                shop.product_page.check_state_element(                    param="height", state="in_stock_and_selected", block="size_table", id=product["height_id"]                )            with allure.step("Проверить, что в Таблице размеров выбран соответствующий размер"):                shop.product_page.check_state_element(                    param="size", state="in_stock_and_selected", block="size_table", id=product["size_id"]                )    @allure.title("Стейты размеров в шторе Таблица размеров")    @allure.description(        """Проверяем все стейты размеров в шторе Таблица размеров:        * размер в наличии и не выбран        * размер в наличии и выбран        * размер не в наличии и не выбран        * размер не в наличии и выбран        * размер не существует"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_states_sizes(self, shop):        with allure.step("Размер в наличии, не выбран"):            with allure.step("Находим артикул товара в наличии и с 2 и более размерами"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.size_id) > 1                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров соответствующий размер имеет стейт в наличии и не выбран"            ):                shop.product_page.check_state_element(                    param="size", state="in_stock_and_not_selected", block="size_table", id=product["size_id"]                )        with allure.step("Размер в наличии, выбран"):            with allure.step("Нажимаем в шторе Таблица размеров на товар в наличии"):                shop.product_page.click_on_param(param="size", block="size_table", id=product["size_id"])            with allure.step("Проверить, что в Таблице размеров соответствующий размер имеет стейт в наличии и выбран"):                shop.product_page.check_state_element(                    param="size", state="in_stock_and_selected", block="size_table", id=product["size_id"]                )        with allure.step("Размер не в наличии, не выбран"):            with allure.step("Находим товар не в наличии"):                variation = self.find_variation_by_availability_condition(qty_sfs=None, qty_ff=None, qty_omni=None)                conditions = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара не в наличии"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров соответствующий размер имеет стейт не наличии и не выбран"            ):                shop.product_page.check_state_element(                    param="size", state="out_of_stock_and_not_selected", block="size_table", id=product["size_id"]                )        with allure.step("Размер не в наличии, выбран"):            with allure.step("Нажимаем в шторе Таблица размеров на товар не в наличии"):                shop.product_page.click_on_param(param="size", block="size_table", id=product["size_id"])            with allure.step(                "Проверить, что в Таблице размеров соответствующий размер имеет стейт не в наличии и выбран"            ):                shop.product_page.check_state_element(                    param="size", state="out_of_stock_and_selected", block="size_table", id=product["size_id"]                )        with allure.step("Несуществующий размер"):            with allure.step("Перейти на страницу товара с несуществующими стейтами размера"):                shop.product_page.navigate(slug="WideFW15/109?height=2")                size_id = 10            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров соответствующий размер имеет стейт несуществующего"):                shop.product_page.check_state_element(param="size", state="not_exist", block="size_table", id=size_id)    @allure.title("Стейты ростов в шторе Таблица размеров")    @allure.description(        """Проверяем все стейты ростов в шторе Таблица размеров:        * рост в наличии и не выбран        * рост в наличии и выбран        * рост не в наличии и не выбран        * рост не в наличии и выбран        * рост не существует"""    )    @allure.severity(Severity.CRITICAL)    @allure.suite("Product")    @allure.label("feature", "Размеры товара")    @allure.label("owner", "balakirevams")    @allure.label("service", "Public")    @allure.label("layers", "ui")    def test_size_table_states_heights(self, shop):        with allure.step("Рост в наличии, не выбран"):            with allure.step("Находим артикул товара в наличии и с 2 и более ростами"):                conditions = [                    """and v.fulfilment_qty >5 and v.product_id IN (                                SELECT v2.product_id                                FROM variations v2                                GROUP BY v2.product_id                                HAVING COUNT(DISTINCT v2.height_id) > 2                            )"""                ]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара без выбранного размера и роста"):                slug = f"{product['article']}/{product['color_code_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров соответствующий рост имеет стейт в наличии и не выбран"            ):                shop.product_page.check_state_element(                    param="height", state="in_stock_and_not_selected", block="size_table", id=product["height_id"]                )        with allure.step("Рост в наличии, выбран"):            with allure.step("Нажимаем в шторе Таблица размеров на товар в наличии"):                shop.product_page.click_on_param(param="height", block="size_table", id=product["height_id"])            with allure.step("Проверить, что в Таблице размеров соответствующий рост имеет стейт в наличии и выбран"):                shop.product_page.check_state_element(                    param="height", state="in_stock_and_selected", block="size_table", id=product["height_id"]                )        with allure.step("Рост не в наличии, не выбран"):            with allure.step("Находим товар не в наличии c двумя и более ростами"):                conditions = [                    """and  v.product_id IN (                                                            SELECT v2.product_id                                                            FROM variations v2                                                            GROUP BY v2.product_id                                                            HAVING COUNT(DISTINCT v2.height_id) > 2                                                        )"""                ]                variation = self.find_variation_by_availability_condition(                    qty_sfs=None, qty_ff=None, qty_omni=None, city_id_in=6, conditions=conditions                )                conditions = [f"and v.id = {variation[0]['variation_id']}"]                product = self.get_data_for_product_card(conditions=conditions)            with allure.step("Перейти на страницу товара не в наличии"):                slug = f"{product['article']}/{product['color_code_id']}?size={product['size_id']}"                shop.product_page.navigate(slug=slug)            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step(                "Проверить, что в Таблице размеров соответствующий рост имеет стейт не наличии и не выбран"            ):                shop.product_page.check_state_element(                    param="height", state="out_of_stock_and_not_selected", block="size_table", id=product["height_id"]                )        with allure.step("Рост не в наличии, выбран"):            with allure.step("Нажимаем в шторе Таблица размеров на товар не в наличии"):                shop.product_page.click_on_param(param="height", block="size_table", id=product["height_id"])            with allure.step(                "Проверить, что в Таблице размеров соответствующий рост имеет стейт не в наличии и выбран"            ):                shop.product_page.check_state_element(                    param="height", state="out_of_stock_and_selected", block="size_table", id=product["height_id"]                )        with allure.step("Несуществующий рост"):            with allure.step("Перейти на страницу товара с несуществующими стейтами роста"):                shop.product_page.navigate(slug="WideFW15/109?size=10")                height_id = 2            with allure.step("Открыть штору Таблица размеров"):                shop.product_page.open_size_table()            with allure.step("Проверить, что в Таблице размеров соответствующий рост имеет стейт несуществующего"):                shop.product_page.check_state_element(param="height", state="not_exist", block="size_table", id=height_id)