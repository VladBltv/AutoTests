from befree.api_model.config.headers import Headersfrom befree.api_model.catalog.private.frozen.endpoints import Endpointsfrom befree.api_model.catalog.private.frozen.payloads import Payloadsfrom befree.api_model import apifrom requests import Responseclass Frozen:    def __init__(self):        self._endpoints = Endpoints()        self._payloads = Payloads()        self._headers = Headers()    # по умолчанию замораживаем    def update(self, frozen_type: list, article: str, is_delete="0"):        response: Response = api.private_session.post(            url=self._endpoints.frozen,            params=self._payloads.update_frozen(frozen_type=frozen_type, article=article, is_delete=is_delete))        return response    def update_with_file(self, frozen_type: list, products_file, is_delete="0"):        response: Response = api.private_session.post(            url=self._endpoints.frozen,            params=self._payloads.update_frozen_with_file(frozen_type=frozen_type,                                                          is_delete=is_delete),            files=self._payloads.files(products_file=products_file)        )        return response    def delete(self):        response: Response = api.private_session.delete(            url=self._endpoints.frozen        )        return response    def get(self):        response: Response = api.private_session.get(            url=self._endpoints.frozen        )        return response