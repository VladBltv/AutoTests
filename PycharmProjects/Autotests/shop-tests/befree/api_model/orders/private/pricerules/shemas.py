from voluptuous import PREVENT_EXTRA, ALLOW_EXTRA, Schema, Boolean, Email, Url, Anytypes_pricerules = Schema(    {"data": [{"id": int, "code": Any("promocode", "paymentMethod"), "name": str}]},    extra=PREVENT_EXTRA,    required=True,)list_pricerules = Schema(    {        "data": {            "pricerules": [                {                    "id": int,                    "title": str,                    "type": {"id": int, "code": Any("promocode", "paymentMethod"), "name": str},                    "dateStart": Any(str, None),                    "dateEnd": Any(str, None),                    "status": Any("running", "pending", "ended"),                }            ],            "pagination": {"total": int, "perPage": int, "currentPage": int, "lastPage": int},        }    },    extra=PREVENT_EXTRA,    required=True,)promocode = Schema(    {        "data": {            "id": int,            "title": str,            "description": Any(str, None),            "type": {"id": 1, "code": "promocode", "name": "Промокод"},            "dateStart": Any(str, None),            "dateEnd": Any(str, None),            "status": Any("pending", "running", "ended"),            "discounts": {"type": Any("sum", "percent"), "amount": int, "deliveryPercent": int},            "conditions": [                {"type": str, "operand": str, "condition": Any(int, [str], {                    str: [                        {                            "id": int,                            "title": str,                            "isDeleted": Boolean                        }                    ]                })                 }            ],            "promocodes": {"counterType": Any("general", "perUser"), "counterAmount": Any(int, None), "values": [str]},            "canEditAllData": Boolean,"productsListType": Any( "all", "compilations","articles")        },    "status": "ok"    },    extra=PREVENT_EXTRA,    required=True,)payment_method = Schema(    {        "data": {            "id": int,            "title": str,            "description": Any(str, None),            "type": {"id": 2, "code": "paymentMethod", "name": "Скидка на способ оплаты"},            "dateStart": Any(str, None),            "dateEnd": Any(str, None),            "status": Any("pending", "running", "ended"),            "discounts": {"type": Any("sum", "percent", None), "amount": Any(int, None), "deliveryPercent": int},            "conditions": [                {"type": str, "operand": str, "condition": Any(int, [str], {                    str: [                        {                            "id": int,                            "title": str,                            "isDeleted": Boolean                        }                    ]                })                 }            ],            "promocodes": None,            "canEditAllData": Boolean,"productsListType": Any( "all", "compilations","articles")        },    "status": "ok"    },    extra=PREVENT_EXTRA,    required=True,)payment_method_request = Schema(    {        "title": str,        "description": str,        "typeId": 2,        "dateStart": str,        "dateEnd": str,        "discounts": {"type": Any("sum", "persent"), "amount": int, "deliveryPercent": int},        "conditions": [{"type": str, "operand": str, "condition": Any(int, [str])}],        "promocodes": None,"productsListType": Any( "all", "compilations","articles")    },    extra=PREVENT_EXTRA,    required=True,)